======================================= PROGRAM (JAVA) ====================================



//Java classes that are mandatory to import for encryption and decryption process   
import java.io.FileInputStream;  
import java.io.FileOutputStream;  
import java.io.IOException;  
import java.io.InputStream;  
import java.io.OutputStream;  
import java.security.InvalidAlgorithmParameterException;  
import java.security.InvalidKeyException;  
import java.security.NoSuchAlgorithmException;  
import java.security.spec.AlgorithmParameterSpec;  
import javax.crypto.Cipher;  
import javax.crypto.CipherInputStream;  
import javax.crypto.CipherOutputStream;  
import javax.crypto.KeyGenerator;  
import javax.crypto.NoSuchPaddingException;  
import javax.crypto.SecretKey;  
import javax.crypto.spec.IvParameterSpec;   
public class DES1  
{  
//creating an instance of the Cipher class for encryption  
private static Cipher encrypt;  
//creating an instance of the Cipher class for decryption  
private static Cipher decrypt;  
//initializing vector  
private static final byte[] initialization_vector = { 22, 33, 11, 44, 55, 99, 66, 77 };  
//main() method  
public static void main(String[] args)   
{  
//path of the file that we want to encrypt  
String textFile = "D:\DemoData.txt";  
//path of the encrypted file that we get as output  
String encryptedData = "D:\\encrypteddata.txt";  
//path of the decrypted file that we get as output  
String decryptedData = "D:\\decrypteddata.txt";  
try   
{  
//generating keys by using the KeyGenerator class  
SecretKey scrtkey = KeyGenerator.getInstance("DES").generateKey();  
AlgorithmParameterSpec aps = new IvParameterSpec(initialization_vector);  
//setting encryption mode  
encrypt = Cipher.getInstance("DES/CBC/PKCS5Padding");  
encrypt.init(Cipher.ENCRYPT_MODE, scrtkey, aps);  
//setting decryption mode  
decrypt = Cipher.getInstance("DES/CBC/PKCS5Padding");  
decrypt.init(Cipher.DECRYPT_MODE, scrtkey, aps);  
//calling encrypt() method to encrypt the file  
encryption(new FileInputStream(textFile), new FileOutputStream(encryptedData));  
//calling decrypt() method to decrypt the file  
decryption(new FileInputStream(encryptedData), new FileOutputStream(decryptedData));  
//prints the stetment if the program runs successfully  
System.out.println("The encrypted and decrypted files have been created successfully.");  
}   
//catching multiple exceptions by using the | (or) operator in a single catch block  
catch (NoSuchAlgorithmException | NoSuchPaddingException | InvalidKeyException | InvalidAlgorithmParameterException | IOException e)   
{  
//prints the message (if any) related to exceptions  
e.printStackTrace();  
}  
}  
//method for encryption  
private static void encryption(InputStream input, OutputStream output)  
throws IOException   
{  
output = new CipherOutputStream(output, encrypt);  
//calling the writeBytes() method to write the encrypted bytes to the file   
writeBytes(input, output);  
}   
//method for decryption  
private static void decryption(InputStream input, OutputStream output)  
throws IOException   
{  
input = new CipherInputStream(input, decrypt);  
//calling the writeBytes() method to write the decrypted bytes to the file    
writeBytes(input, output);  
}  
//method for writting bytes to the files   
private static void writeBytes(InputStream input, OutputStream output)  
throws IOException   
{  
byte[] writeBuffer = new byte[512];  
int readBytes = 0;  
while ((readBytes = input.read(writeBuffer)) >= 0)   
{  
output.write(writeBuffer, 0, readBytes);  
}  
//closing the output stream  
output.close();  
//closing the input stream  
input.close();  
}   
}  


------------------------------------------------------
DemoData.txt

Hello 
Airtificial Intelligence And Information Secuirty
------------------------------------------------------
encrypteddata.txt

√ç√Ø√ò..b¬º
d(>√î‚Äò√æ√¢Z√¨√è√ä√ù@¬∫¬≠‚Ä¶9S+√åt√ù@√à¬•¬≥¬Ø¬Æ‚Äò√å≈∏√éOU¬§√Ö4.≈°r√â,¬∞%‚Ç¨√∂R{√å√å√ê
------------------------------------------------------
decrypteddata.txt

Hello 
Airtificial Intelligence And Information Secuirty
------------------------------------------------------



========================================================== THEORY =====================================


DES Algorithm:

   The DES (Data Encryption Standard) algorithm is a symmetric-key block cipher created in the early 1970s by an
   IBM team and adopted by the National Institute of Standards and Technology (NIST). The algorithm takes the
   plain text in 64-bit blocks and converts them into ciphertext using 48-bit keys.

Algorithm:-
   
   1.64-Bit plain text block is handed over to an Initial Permutation (IP) function
   2. Initial Permutation (IP) is performed on plain text
   3. IP produces two halves of permuted block Left plain text (LPT) and Right plain text (RPT)
   4. Each LPT and RPT goes through 16 rounds of encryption process, each with its own key.
   5. In the end LPT and RPT are rejoined and final Permutation (FP) is performed on combined  block
   6. The result is 64 bit cipher text.

Advantages:

   1. It can change the system to create the directories password protected.
   2. It can review a short history of DES and represent the basic structures.
   3. It can define the building block component of DES.
   4. It can define the round keys generation process and to interpret data encryption standard.
   5. It can provide that private information is not accessed by other users.
   6. Some users can use the similar system and still can work individually.

Disadvantages:

   1. Hardware implementations of DES are very quick.
   2. DES was not designed for application and therefore it runs relatively slowly.
   3. In a new technology, it is improving a several possibility to divide the encrypted code, therefore AES is
      preferred than DES.

Applications of DES Algorithm:

   1. It is used in random number generation.
   2. It is deployed when not-so-strong encryption is needed.
   3. It is used to develop a new form of DES, called Triple DES
================================================================================================================